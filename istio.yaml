apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  addonComponents:
    prometheus:
      # Normally we'll also have a Prometheus in the istio-system namespace that
      # ONLY scrapes Istio system components because it needs access to a shared
      # secret in there. For this repro, we'll skip that and the federation from
      # istio-system to the monitoring namespace.
      enabled: false
  components:
    egressGateways:
      - enabled: true
        name: istio-egressgateway
        k8s:
          hpaSpec:
            minReplicas: 2
    ingressGateways:
      - enabled: true
        name: istio-ingressgateway
        k8s:
          hpaSpec:
            minReplicas: 2
    policy:
      k8s:
        hpaSpec:
          minReplicas: 2
    telemetry:
      enabled: false
  hub: docker.io/istio
  meshConfig:
    accessLogFile: /dev/stdout
    accessLogFormat: "[%START_TIME%] \"%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% %PROTOCOL%\" %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% \"%UPSTREAM_TRANSPORT_FAILURE_REASON%\" %BYTES_RECEIVED% %BYTES_SENT% %DURATION% %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)% \"%REQ(X-FORWARDED-FOR)%\" \"%REQ(USER-AGENT)%\" \"%REQ(X-REQUEST-ID)%\" \"%REQ(:AUTHORITY)%\" \"%UPSTREAM_HOST%\" %UPSTREAM_CLUSTER% %UPSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_LOCAL_ADDRESS% %DOWNSTREAM_REMOTE_ADDRESS% %REQUESTED_SERVER_NAME% %ROUTE_NAME%\n"
    enablePrometheusMerge: false
    outboundTrafficPolicy:
      mode: REGISTRY_ONLY
  profile: default
  tag: 1.6.14
  values:
    global:
      imagePullPolicy: Always
      logAsJson: true
    mixer:
      adapters:
        stdio:
          outputAsJson: true
      telemetry:
        replicaCount: 2
    pilot:
      replicaCount: 2
      traceSampling: 100.0
